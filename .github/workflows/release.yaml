name: Release

on:
  push:
    tags: [ "v*" ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup PNPM
      uses: pnpm/action-setup@v2
      with:
        version: "latest"

    - name: Setup Nodejs
      uses: actions/setup-node@v3
      with:
        cache: "pnpm"
        registry-url: "https://registry.npmjs.org"

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 11.x

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.x

    - name: Setup DotNet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x

    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile

    - name: Run build
      run: pnpm run build

    - name: Publish Github Releases
      run: npx changelogithub
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

    - name: Publish packages
      run: pnpm run publish-packages
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        NPM_ACCESS_LEVEL: ${{ secrets.NPM_ACCESS_LEVEL }}
        MAVEN_ENDPOINT: ${{ secrets.MAVEN_ENDPOINT }}
        MAVEN_GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        MAVEN_GPG_PRIVATE_KEY_PASSPHRASE: ${{ secrets.MAVEN_GPG_PRIVATE_KEY_PASSPHRASE }}
        MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
        MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
        MAVEN_STAGING_PROFILE_ID: ${{ secrets.MAVEN_STAGING_PROFILE_ID }}
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        GITHUB_TOKEN: ${{ secrets.GO_GITHUB_TOKEN }}
        GIT_USER_NAME: ${{ secrets.GIT_USER_NAME }}
        GIT_USER_EMAIL: ${{ secrets.GIT_USER_EMAIL }}
